// Code generated by MockGen. DO NOT EDIT.
// Source: btcd.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	btcd "github.com/junzhli/btcd-address-indexing-worker/btcd"
	reflect "reflect"
)

// MockBtcd is a mock of Btcd interface
type MockBtcd struct {
	ctrl     *gomock.Controller
	recorder *MockBtcdMockRecorder
}

// MockBtcdMockRecorder is the mock recorder for MockBtcd
type MockBtcdMockRecorder struct {
	mock *MockBtcd
}

// NewMockBtcd creates a new mock instance
func NewMockBtcd(ctrl *gomock.Controller) *MockBtcd {
	mock := &MockBtcd{ctrl: ctrl}
	mock.recorder = &MockBtcdMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBtcd) EXPECT() *MockBtcdMockRecorder {
	return m.recorder
}

// SearchRawTransactions mocks base method
func (m *MockBtcd) SearchRawTransactions(addr string, startIdx, max int64) (*[]btcd.ResponseSearchRawTransactions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchRawTransactions", addr, startIdx, max)
	ret0, _ := ret[0].(*[]btcd.ResponseSearchRawTransactions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchRawTransactions indicates an expected call of SearchRawTransactions
func (mr *MockBtcdMockRecorder) SearchRawTransactions(addr, startIdx, max interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchRawTransactions", reflect.TypeOf((*MockBtcd)(nil).SearchRawTransactions), addr, startIdx, max)
}

// GetInfo mocks base method
func (m *MockBtcd) GetInfo() (*map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfo")
	ret0, _ := ret[0].(*map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInfo indicates an expected call of GetInfo
func (mr *MockBtcdMockRecorder) GetInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfo", reflect.TypeOf((*MockBtcd)(nil).GetInfo))
}
